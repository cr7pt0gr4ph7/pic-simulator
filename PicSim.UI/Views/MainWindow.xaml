<Window x:Class="PicSim.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:self="clr-namespace:PicSim.UI.Views"
        xmlns:vm="clr-namespace:PicSim.UI.ViewModels"
        xmlns:conv="clr-namespace:PicSim.UI.Converters"
        xmlns:avEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:PicSim.UI.Behaviors"
        xmlns:helper="clr-namespace:PicSim.UI.Helper"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d" d:DataContext="{x:Type vm:MainWindowViewModel}"
        Title="MainWindow" Height="600" Width="900" Closed="Window_Closed">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="Save" Executed="SaveExecuted" CanExecute="SaveEnabled"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsExecuted" />
        <!--<CommandBinding Command="Open" Executed="OpenExecuted" CanExecute="OpenEnabled"/>-->
        <CommandBinding Command="New" Executed="NewExecuted" CanExecute="NewEnabled"/>
        <CommandBinding Command="Close" Executed="CloseExecuted" CanExecute="CloseEnabled"/>
        <CommandBinding Command="self:CustomCmds.Compile" CanExecute="CompileEnabled" Executed="CompileExecuted" />
        <!--<CommandBinding Command="self:CustomCmds.Run" CanExecute="RunEnabled" Executed="RunExecuted" />-->
        <CommandBinding Command="self:CustomCmds.Pause" CanExecute="PauseEnabled" Executed="PauseExecuted" />
        <!--<CommandBinding Command="self:CustomCmds.Stop" CanExecute="StopEnabled" Executed="StopExecuted" />-->
        <CommandBinding Command="self:CustomCmds.Continue" CanExecute="ContinueEnabled" Executed="ContinueExecuted" />
        <CommandBinding Command="self:CustomCmds.Step" CanExecute="StepEnabled" Executed="StepExecuted" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="Save" Key="S" Modifiers="Control" />
        <KeyBinding Command="SaveAs" Key="S" Modifiers="Control+Shift" />
        <KeyBinding Command="{Binding LoadFileCommand}" Key="O" Modifiers="Control" />
        <KeyBinding Command="New" Key="N" Modifiers="Control" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>


        <Menu Grid.Row="0" Grid.ColumnSpan="5">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="New"/>
                <MenuItem Header="Open" Command="{Binding LoadFileCommand}"/>
                <MenuItem Header="Exit" Command="Close"/>
            </MenuItem>
            <MenuItem Header="Edit">
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Header="Frequency" Command="{Binding FrequencyController.OpenSettingCommand}"/>
                <MenuItem Header="RS232" Command="{Binding RS232Controller.OpenSettingsCommand}"/>
                <MenuItem Header="ClockSet" Command="{Binding TaktgeneratorController.OpenSettingsCommand}"/>
                <Separator/>
                <MenuItem Header="Editor">
                    <MenuItem Header="Show line numbers" IsCheckable="true" IsChecked="{Binding Editor.ShowLineNumbers}"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Show PDF" Command="{Binding Help.ShowHelpPdf}"/>
                <MenuItem Header="Update UI" Command="{Binding RequeryCommands}"/>
            </MenuItem>
        </Menu>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="5">
            <self:SimpleToolbarButton BText="New" BSource="../icons/document.png" BCommand="New"/>
            <self:SimpleToolbarButton BText="Open" BSource="../icons/folder-open.png" BCommand="{Binding LoadFileCommand}"/>
            <self:SimpleToolbarButton BText="Save" BSource="../icons/disk-return.png" BCommand="Save"/>
            <self:SimpleToolbarButton BText="Save As" BSource="../icons/disk-rename.png" BCommand="SaveAs"/>

            <self:SimpleToolbarSeparator />

            <self:SimpleToolbarButton BText="Compile" BSource="../icons/box.png" BCommand="self:CustomCmds.Compile"/>

            <self:SimpleToolbarSeparator />

            <self:SimpleToolbarButton BText="Run" BSource="../icons/control.png" BCommand="{Binding StartCommand}"/>

            <ComboBox Name="cbxSpeed" SelectedIndex="3" MinWidth="85" Margin="5, 0, 5, 0" SelectionChanged="cbxSpeed_SelectionChanged">
                <ComboBoxItem Content="Snail" />
                <ComboBoxItem Content="Very Slow" />
                <ComboBoxItem Content="Slow" />
                <ComboBoxItem Content="Normal" />
                <ComboBoxItem Content="Fast" />
                <ComboBoxItem Content="Very Fast" />
                <ComboBoxItem Content="Maximum" />
            </ComboBox>

            <self:SimpleToolbarButton BText="Stop" BSource="../icons/control-stop-square.png" BCommand="{Binding StopCommand}"/>

            <self:SimpleToolbarSeparator />

            <self:SimpleToolbarButton BText="Pause" BSource="../icons/control-pause.png" BCommand="{Binding PauseCommand}"/>
            <self:SimpleToolbarButton BText="Continue" BSource="../icons/arrow-curve-000-double.png" BCommand="{Binding ContinueCommand}"/>
            <self:SimpleToolbarButton BText="Step" BSource="../icons/arrow-curve-000-left.png" BCommand="{Binding StepCommand}"/>

            <self:SimpleToolbarSeparator />

            <self:SimpleToolbarButton BText="Reset" BSource="../icons/control-reset.png" BCommand="{Binding ResetCommand}"/>

        </StackPanel>

        <avEdit:TextEditor Grid.Row="2" Grid.Column="2" Margin="5" x:Name="txtCode" PreviewTextInput="txtCode_PreviewTextInput"
                           FontFamily="Consolas"
                           ShowLineNumbers="{Binding Editor.ShowLineNumbers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           self:AvalonEditHelpers.TextBinding="{Binding Simulator.File.Text}">
            <i:Interaction.Behaviors>
                <behaviors:AddBreakpointMarginBehavior Breakpoints="{Binding Debug.Breakpoints}"/>
                <behaviors:AddCurrentLineRendererBehavior HighlightedLine="{Binding Debug.CurrentLine}"/>
            </i:Interaction.Behaviors>
        </avEdit:TextEditor>

        <GridSplitter Grid.Row="2" Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="False" Width="3" />
        <GridSplitter Grid.Row="2" Grid.Column="3" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" ShowsPreview="False" Width="3" />

        <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="3" Margin="5,5,5,0" Height="Auto" VerticalAlignment="Top">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical" Grid.Row="0">
                <self:IORegisterGrid x:Name="iogridA" Margin="0, 0, 0, 10" DataContext="{Binding SpecialRegisters.PortA}"/>
                <self:IORegisterGrid x:Name="iogridB" Margin="0, 0, 0, 10" DataContext="{Binding SpecialRegisters.PortB}"/>
                <self:CircularStackDisplay x:Name="stackList" DataContext="{Binding Stack}"/>
            </StackPanel>

            <DockPanel Grid.Row="2" Margin="0, 0, 0, 25">
                <StackPanel DockPanel.Dock="Left" Orientation="Vertical" Width="115">
                    <TextBlock TextAlignment="Right" Text="W-Register"/>
                    <TextBlock TextAlignment="Right" Text="PC"/>
                    <TextBlock TextAlignment="Right" Text="Frequency Display"/>
                    <TextBlock TextAlignment="Right" Text="Frequency Controller"/>
                    <TextBlock TextAlignment="Right" Text="Run Time"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Vertical" Margin="8, 0, 0, 0"
                            TextBlock.FontFamily="Courier New" TextBlock.FontSize="14">
                    <StackPanel.Resources>
                        <conv:HexValueConverter x:Key="hex8Converter" Digits="2" UseHexPrefix="True"/>
                        <conv:HexValueConverter x:Key="hex16Converter" Digits="4" UseHexPrefix="True"/>
                    </StackPanel.Resources>
                    <TextBlock Name="lblRegW"      Text="{Binding W.Value,Converter={StaticResource hex8Converter}}"/>
                    <TextBlock Name="lblRegPC"     Text="{Binding PC.Value,Converter={StaticResource hex16Converter}}"/>
                    <TextBlock Name="lblFreqView"  Text="0 Hz"/>
                    <TextBlock Name="lblFreqModel" Text="{Binding FrequencyController.CurrentFrequency, StringFormat={}{0} Hz}"/>
                    <TextBlock Name="lblRunTime"   Text="{Binding Simulator.Processor.Clock.SimulatedTime}"/>
                </StackPanel>
            </DockPanel>

            <Button Grid.Row="3" Content="Settings" HorizontalAlignment="Stretch" Command="{Binding FrequencyController.OpenSettingCommand}"/>

        </Grid>

        <ScrollViewer Grid.Row="2" Grid.Column="4" Grid.RowSpan="3" Margin="5">
            <self:RegisterGrid x:Name="rgridMain" DataContext="{Binding MemoryTable}"/>
        </ScrollViewer>

        <GridSplitter Grid.Row="3" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="False" Height="3" />

        <self:ModulTab Grid.Row="4" Grid.Column="2" />

        <StatusBar Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="5">
            <TextBlock Name="StatusBarInfo" Text="Do you need help? More information can be found in the help pdf file."/>
        </StatusBar>
    </Grid>
</Window>
